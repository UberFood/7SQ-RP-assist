(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var _wsClient = require('./ws-client');

var _wsClient2 = _interopRequireDefault(_wsClient);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var $ = window.jQuery;

var SERVER_ADDRESS = location.origin.replace(/^http/, 'ws');
var my_name = JSON.parse(sessionStorage.getItem('username'));

var ADD_CHARACTER_BUTTON_SELECTOR = '[data-name="add_character_button"]';

function addCharacter() {
  var name_string = document.getElementById("name").value;
  var avatar = document.getElementById("avatar").value;
  avatar = '/images/' + avatar;
  var strength_string = document.getElementById("strength").value;
  var stamina_string = document.getElementById("stamina").value;
  var speed_string = document.getElementById("speed").value;
  var intelligence_string = document.getElementById("intelligence").value;

  var character = { name: name_string, avatar: avatar, strength: strength_string, stamina: stamina_string, speed: speed_string, intelligence: intelligence_string };

  var toSend = {};
  toSend.command = 'guild_sim_new_char';
  toSend.character = character;
  _wsClient2.default.sendMessage(toSend);
  document.location.reload();
}

_wsClient2.default.init(SERVER_ADDRESS);

_wsClient2.default.registerOpenHandler(function () {
  var toSend = {};
  toSend.command = 'add_character_permission';
  toSend.from_name = my_name;
  toSend.password = JSON.parse(sessionStorage.getItem('gm_password'));
  _wsClient2.default.sendMessage(toSend);
});

_wsClient2.default.registerMessageHandler(function (data) {
  console.log(data);
  if (data.to_name == my_name) {
    if (data.command == 'add_character_permission_server') {
      if (data.isValid == 0) {
        alert('Нарушаем');
        window.location.href = "/";
      }
    }
  }
});

var add_character_button = $(ADD_CHARACTER_BUTTON_SELECTOR);
add_character_button.on('click', addCharacter);

},{"./ws-client":2}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var socket = void 0;
var server_address = void 0;
var onMessageFunction = void 0;

function init(url) {
  server_address = url;
  socket = new WebSocket(url);
  console.log('connecting..');
}

function isReady() {
  return socket.readyState === WebSocket.OPEN;
}

function registerOpenHandler(handlerFunction) {
  socket.onopen = function () {
    console.log('open');
    handlerFunction();
  };
}

function registerMessageHandler(handlerFunction) {
  onMessageFunction = handlerFunction;
  socket.onmessage = function (e) {
    var data = JSON.parse(e.data);
    handlerFunction(data);
  };
}

function registerMessageHandlerDefault() {
  socket.onmessage = function (e) {
    var data = JSON.parse(e.data);
    onMessageFunction(data);
  };
}

function sendMessage(payload) {
  if (socket.readyState === WebSocket.OPEN) {
    socket.send(JSON.stringify(payload));
  } else {
    init(server_address);
    registerMessageHandler(onMessageFunction);
    if (socket.readyState === WebSocket.OPEN) {
      socket.send(JSON.stringify(payload));
    } else {
      console.log('Not send, but reconnected');
    }
  }
}

exports.default = {
  init: init,
  registerOpenHandler: registerOpenHandler,
  registerMessageHandler: registerMessageHandler,
  sendMessage: sendMessage,
  registerMessageHandlerDefault: registerMessageHandlerDefault,
  isReady: isReady
};

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
